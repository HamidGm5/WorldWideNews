// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorldWideNews.API.Data;

#nullable disable

namespace WorldWideNews.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WorldWideNews.API.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.CountryCategories", b =>
                {
                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.HasKey("CategoryID", "CountryID");

                    b.HasIndex("CountryID");

                    b.ToTable("CountryCategories");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.News", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CountryCategoriesCategoryID")
                        .HasColumnType("int");

                    b.Property<int>("CountryCategoriesCountryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsAgencyID")
                        .HasColumnType("int");

                    b.Property<string>("NewsAgencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReporterID")
                        .HasColumnType("int");

                    b.Property<string>("ReporterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("NewsAgencyID");

                    b.HasIndex("ReporterID");

                    b.HasIndex("CountryCategoriesCategoryID", "CountryCategoriesCountryID");

                    b.ToTable("News");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.NewsAgency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("NewsAgencies");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.Reporter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewsAgencyID")
                        .HasColumnType("int");

                    b.Property<string>("NewsAgencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("NewsAgencyID");

                    b.ToTable("Reporters");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.CountryCategories", b =>
                {
                    b.HasOne("WorldWideNews.API.Entities.Category", "Category")
                        .WithMany("CountryCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorldWideNews.API.Entities.Country", "Country")
                        .WithMany("CountryCategories")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.News", b =>
                {
                    b.HasOne("WorldWideNews.API.Entities.NewsAgency", "NewsAgency")
                        .WithMany("News")
                        .HasForeignKey("NewsAgencyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorldWideNews.API.Entities.Reporter", "Reporter")
                        .WithMany("News")
                        .HasForeignKey("ReporterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorldWideNews.API.Entities.CountryCategories", "CountryCategories")
                        .WithMany("News")
                        .HasForeignKey("CountryCategoriesCategoryID", "CountryCategoriesCountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryCategories");

                    b.Navigation("NewsAgency");

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.Reporter", b =>
                {
                    b.HasOne("WorldWideNews.API.Entities.NewsAgency", "NewsAgency")
                        .WithMany("Reporters")
                        .HasForeignKey("NewsAgencyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsAgency");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.Category", b =>
                {
                    b.Navigation("CountryCategories");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.Country", b =>
                {
                    b.Navigation("CountryCategories");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.CountryCategories", b =>
                {
                    b.Navigation("News");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.NewsAgency", b =>
                {
                    b.Navigation("News");

                    b.Navigation("Reporters");
                });

            modelBuilder.Entity("WorldWideNews.API.Entities.Reporter", b =>
                {
                    b.Navigation("News");
                });
#pragma warning restore 612, 618
        }
    }
}
